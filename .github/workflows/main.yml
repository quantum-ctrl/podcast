name: Generate Podcast Feed

on:
  push:
    branches: [ main ]
    paths:
      - 'audios/zhuoke/**'
  workflow_dispatch:

jobs:
  generate-feed:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y exiftool file
        
    - name: Generate podcast feed
      run: |
        #!/bin/bash
        
        # Set paths relative to repository
        FEED_FILE="feed/kjck_podcast.xml"
        AUDIO_PATH="audios/zhuoke"
        FEED_TITLE="卓克-科技参考"
        AUTHOR="卓克"
        BASE_URL="https://raw.githubusercontent.com/${{ github.repository }}/main"
        
        # Initialize result variable
        result=""
        
        # Function to rename files (remove " - 得到APP" and spaces)
        rename_files(){
            cd "$AUDIO_PATH"
            echo "Starting rename process in $AUDIO_PATH"
        
            # Step 1: Rename all files containing ' - 得到APP'
            for file in *' - 得到APP'*; do
                if [ -f "$file" ]; then
                    newname=$(echo "$file" | sed 's/ - 得到APP//' | tr -d ' ')
                    mv "$file" "$newname"
                    echo "Renamed: $file -> $newname"
                fi
            done
        
            # Step 2: Delete any remaining old files that still match the pattern (safety cleanup)
            for old in *' - 得到APP'*; do
                if [ -f "$old" ]; then
                    echo "Deleting old file: $old"
                    rm -f "$old"
                fi
            done
        
            cd ../..
        }
        
        # Function to create RSS item entry
        make_entry() {
            local file="$1"
            local title=$(basename "$file" | sed 's/\.[^.]*$//')
            local fileduration=$(exiftool -S -Duration "$file" 2>/dev/null | sed 's/Duration: //' | sed 's/ (approx)//' || echo "00:00:00")
            local date=$(date -r "$file" '+%a, %d %b %Y %T %Z')
            local filesize=$(stat -c%s "$file")
            local mimetype=$(file -b --mime-type "$file")
            local fileurl="${BASE_URL}/${file}"
            
            result+="\n<item>"
            result+="\n\t<title>$title</title>"
            result+="\n\t<itunes:author>$AUTHOR</itunes:author>"
            result+="\n\t<pubDate>$date</pubDate>"
            result+="\n\t<enclosure url=\"$fileurl\" length=\"$filesize\" type=\"$mimetype\"/>"
            result+="\n\t<itunes:duration>$fileduration</itunes:duration>"
            result+="\n</item>"
        }
        
        # Function to write RSS header
        write_header() {
            result+="<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
            result+="\n<rss xmlns:itunes=\"http://www.itunes.com/dtds/podcast-1.0.dtd\" version=\"2.0\">"
            result+="\n<channel>"
            result+="\n<title>$FEED_TITLE</title>"
            result+="\n<itunes:author>$AUTHOR</itunes:author>"
            result+="\n<itunes:image href=\"https://piccdn3.umiwi.com/img/202011/03/202011032054372409251528.jpeg\" />"
            result+="\n<description>卓克科技参考播客</description>"
            result+="\n<language>zh-cn</language>"
            result+="\n<link>$BASE_URL</link>"
        }
        
        # Function to write RSS footer
        write_footer() {
            result+="\n</channel>"
            result+="\n</rss>"
        }
        
        # Main function to generate the feed
        generate_feed() {
            echo "Generating podcast feed..."
            echo "Audio path: $AUDIO_PATH"
            echo "Feed file: $FEED_FILE"
            
            # Write header
            write_header
            
            # Rename files if needed
            rename_files
            
            # Process each audio file
            cd "$AUDIO_PATH"
            for file in *.*; do
                if [ -f "$file" ]; then
                    echo "Processing: $file"
                    make_entry "$file"
                fi
            done
            cd ../..
            
            # Write footer
            write_footer
            
            # Write to feed file
            echo -e "$result" > "$FEED_FILE"
            echo "Feed generated successfully: $FEED_FILE"
        }
        
        # Run the feed generation
        generate_feed
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add feed/kjck_podcast.xml
        git add audios/zhuoke/*  # Add any renamed files
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Auto-generate podcast feed"
          git push
        fi
